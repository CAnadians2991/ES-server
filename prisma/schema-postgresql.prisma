generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Candidate {
  id              Int       @id @default(autoincrement())
  branch          String    @default("ЦО")
  responsible     String    @default("")
  firstName       String    @default("")
  lastName        String    @default("")
  phone           String    @default("")
  age             Int?      @default(18)
  candidateCountry String   @default("Україна")
  vacancyCountry  String    @default("Польща")
  projectName     String    @default("")
  partnerNumber   String    @default("")
  arrivalDate     DateTime?
  candidateStatus String    @default("Новий")
  paymentAmount   Int?      @default(0)
  paymentStatus   String    @default("Не оплачено")
  recipientType   String    @default("")
  comment         String    @default("")
  sortOrder       Int       @default(0)
  isDeleted       Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  
  // Нові поля
  applicationNumber String? @unique
  email            String?
  passportNumber   String?
  passportExpiry   DateTime?
  education        String?
  workExperience   String?
  languageSkills   String?
  familyStatus     String?
  children         Int?
  
  // Зв'язки
  visaSales        VisaSale[]
  auditLogs        AuditLog[]
  
  @@map("candidates")
}

model User {
  id          Int      @id @default(autoincrement())
  username    String   @unique
  password    String
  role        UserRole @default(EMPLOYEE)
  fullName    String?
  branch      String?
  email       String?
  phone       String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Зв'язки
  salaries    MonthlySalary[]
  auditLogs   AuditLog[]
  
  @@map("users")
}

model VisaSale {
  id          Int      @id @default(autoincrement())
  candidateId Int
  amount      Int      @default(0)
  saleDate    DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Зв'язки
  candidate   Candidate @relation(fields: [candidateId], references: [id], onDelete: Cascade)
  
  @@map("visa_sales")
}

model MonthlySalary {
  id        Int      @id @default(autoincrement())
  userId    Int
  month     Int
  year      Int
  amount    Int      @default(0)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Зв'язки
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@map("monthly_salaries")
}

model Expense {
  id          Int      @id @default(autoincrement())
  description String
  amount      Int      @default(0)
  category    String   @default("Інше")
  date        DateTime @default(now())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("expenses")
}

model AuditLog {
  id          Int      @id @default(autoincrement())
  userId      Int
  candidateId Int?
  action      String
  tableName   String
  recordId    Int
  oldValues   Json?
  newValues   Json?
  timestamp   DateTime @default(now())
  
  // Зв'язки
  user        User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  candidate   Candidate? @relation(fields: [candidateId], references: [id], onDelete: SetNull)
  
  @@map("audit_logs")
}

model Partner {
  id           Int      @id @default(autoincrement())
  name         String
  country      String
  contactPerson String?
  email        String?
  phone        String?
  commission   Float    @default(0.0)
  isActive     Boolean  @default(true)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  
  @@map("partners")
}

model Project {
  id          Int      @id @default(autoincrement())
  name        String
  country     String
  description String?
  isActive    Boolean  @default(true)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  @@map("projects")
}

model BranchStats {
  id             Int      @id @default(autoincrement())
  branch         String
  month          Int
  year           Int
  totalCandidates Int     @default(0)
  totalRevenue   Int      @default(0)
  totalExpenses  Int      @default(0)
  profit         Int      @default(0)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  
  @@unique([branch, month, year])
  @@map("branch_stats")
}

enum UserRole {
  ADMIN
  DIRECTOR
  MANAGER
  ACCOUNTANT
  EMPLOYEE
}
