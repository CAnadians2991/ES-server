"use client"

import { Trash2 } from 'lucide-react'
import { useCandidatesStore } from '@/hooks/use-candidates'
import { api } from '@/lib/api'
import { formatDate, formatCurrency } from '@/lib/utils'
import { Button } from '@/components/ui/button'
import { useToast } from '@/hooks/use-toast'
import type { Candidate } from '@/types'

interface CandidatesTableProps {
  candidates: Candidate[]
}

export function CandidatesTable({ candidates }: CandidatesTableProps) {
  const { toast } = useToast()
  const { deleteCandidate } = useCandidatesStore()

  async function handleDelete(id: number) {
    if (!confirm('–í–∏ –≤–ø–µ–≤–Ω–µ–Ω—ñ, —â–æ —Ö–æ—á–µ—Ç–µ –≤–∏–¥–∞–ª–∏—Ç–∏ —Ü—å–æ–≥–æ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞?')) {
      return
    }

    try {
      await api.candidates.delete(id)
      deleteCandidate(id)
      toast({
        title: '–£—Å–ø—ñ—Ö',
        description: '–ö–∞–Ω–¥–∏–¥–∞—Ç–∞ –≤–∏–¥–∞–ª–µ–Ω–æ',
      })
    } catch (error) {
      toast({
        title: '–ü–æ–º–∏–ª–∫–∞',
        description: '–ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞',
        variant: 'destructive',
      })
    }
  }

  function getStatusColor(status: string) {
    const colors: Record<string, string> = {
      '–ó–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–æ': 'bg-blue-100 text-blue-800',
      '–ù–µ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω': 'bg-red-100 text-red-800',
      '–ì–æ—Ç–æ–≤–∏–π –¥–æ –≤–∏—ó–∑–¥—É': 'bg-green-100 text-green-800',
      '–í –¥–æ—Ä–æ–∑—ñ': 'bg-orange-100 text-orange-800',
      '–ü—Ä–∏–±—É–≤': 'bg-cyan-100 text-cyan-800',
      '–ü—Ä–∞—Ü—é—î': 'bg-green-100 text-green-800',
      '–ó–∞–≤–µ—Ä—à–∏–≤ —Ä–æ–±–æ—Ç—É': 'bg-purple-100 text-purple-800',
      '–ù–µ –¥–æ—ó—Ö–∞–≤': 'bg-red-100 text-red-800',
    }
    return colors[status] || 'bg-gray-100 text-gray-800'
  }

  if (candidates.length === 0) {
    return (
      <div className="text-center py-12">
        <div className="text-6xl mb-4">üìã</div>
        <h3 className="text-lg font-semibold mb-2">–ù–µ–º–∞—î –∫–∞–Ω–¥–∏–¥–∞—Ç—ñ–≤</h3>
        <p className="text-gray-500">–î–æ–¥–∞–π—Ç–µ –ø–µ—Ä—à–∏–π –∫–∞–Ω–¥–∏–¥–∞—Ç –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É &quot;+ –î–æ–¥–∞—Ç–∏ –∫–∞–Ω–¥–∏–¥–∞—Ç–∞&quot;</p>
      </div>
    )
  }

  return (
    <>
      <div className="overflow-x-auto">
        <table className="w-full text-sm">
          <thead className="bg-success text-white sticky top-0 z-10">
            <tr>
              <th className="px-4 py-3 text-left">ID</th>
              <th className="px-4 py-3 text-left">–§—ñ–ª—ñ—è</th>
              <th className="px-4 py-3 text-left">–í—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω–∏–π</th>
              <th className="px-4 py-3 text-left">–ü–Ü–ë</th>
              <th className="px-4 py-3 text-left">–¢–µ–ª–µ—Ñ–æ–Ω</th>
              <th className="px-4 py-3 text-left">–í—ñ–∫</th>
              <th className="px-4 py-3 text-left">–ö—Ä–∞—ó–Ω–∞</th>
              <th className="px-4 py-3 text-left">–ü—Ä–æ–µ–∫—Ç</th>
              <th className="px-4 py-3 text-left">–ü–∞—Ä—Ç–Ω–µ—Ä</th>
              <th className="px-4 py-3 text-left">–î–∞—Ç–∞ –∑–∞—ó–∑–¥—É</th>
              <th className="px-4 py-3 text-left">–°—Ç–∞—Ç—É—Å</th>
              <th className="px-4 py-3 text-left">–°—Ç–∞—Ç—É—Å –æ–ø–ª–∞—Ç–∏</th>
              <th className="px-4 py-3 text-left">–†–µ–∫–≤—ñ–∑–∏—Ç–∏</th>
              <th className="px-4 py-3 text-left">–ü—Ä–∏–º—ñ—Ç–∫–∞</th>
              <th className="px-4 py-3 text-center">–î—ñ—ó</th>
            </tr>
          </thead>
          <tbody className="divide-y divide-gray-200">
            {candidates.map((candidate) => (
              <tr key={candidate.id} className="hover:bg-gray-50">
                <td className="px-4 py-3 font-mono text-xs">{String(candidate.id).padStart(6, '0')}</td>
                <td className="px-4 py-3">{candidate.branch}</td>
                <td className="px-4 py-3">{candidate.responsible}</td>
                <td className="px-4 py-3 font-medium">{candidate.firstName} {candidate.lastName}</td>
                <td className="px-4 py-3">{candidate.phone}</td>
                <td className="px-4 py-3">{candidate.age}</td>
                <td className="px-4 py-3">{candidate.vacancyCountry}</td>
                <td className="px-4 py-3">{candidate.projectName}</td>
                <td className="px-4 py-3">{candidate.partnerNumber}</td>
                <td className="px-4 py-3">{candidate.arrivalDate ? formatDate(String(candidate.arrivalDate)) : '-'}</td>
                <td className="px-4 py-3">
                  <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(candidate.candidateStatus)}`}>
                    {candidate.candidateStatus}
                  </span>
                </td>
                <td className="px-4 py-3">{candidate.paymentStatus || '-'}</td>
                <td className="px-4 py-3">{candidate.recipientType || '-'}</td>
                <td className="px-4 py-3 max-w-[200px] truncate" title={candidate.comment || ''}>
                  {candidate.comment || '-'}
                </td>
                <td className="px-4 py-3">
                  <div className="flex items-center justify-center gap-2">
                    <Button
                      size="sm"
                      variant="destructive"
                      onClick={() => handleDelete(candidate.id)}
                    >
                      <Trash2 className="h-4 w-4" />
                    </Button>
                  </div>
                </td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </>
  )
}

